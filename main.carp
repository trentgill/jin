(load "Macros.carp")
(load "Interfaces.carp")

(load "lib/stm.carp")
(load "lib/dout.carp")
(load "lib/din.carp")

(system-include "carp_memory.h") ;CARP_MALLOC
(system-include "string.h") ;strlen

(defn tr-handler [ch state]
  (STM.println "call ii send"))

(defn detect-handler [ch state]
  (STM.println "do something w detect signal"))

(defn main []
  (do
    (STM.init)
    (let [led  (Dout.init \B 4)
          led2 (Dout.init \B 5)
          out  (Dout.init \A 12)
          tr1  (Din.event \A 1 tr-handler)
          det1 (Din.event \A 2 detect-handler)]
      (while true
        (do
          (STM.println "test")
          (Dout.flip led)
          (Dout.flip out)
          (STM.delay 300)
          (Dout.flip led2))))))
